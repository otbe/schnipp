service:
  name: aws-nodejs-typescript

plugins:
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline

provider:
  name: aws
  runtime: nodejs8.10
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:Scan
        - dynamodb:DeleteItem
        - dynamodb:GetRecords
        - dynamodb:GetShardIterator
        - dynamodb:DescribeStream
        - dynamodb:ListStreams
      Resource: { Fn::GetAtt: [ eventsIngressQueue, Arn ] }    

custom:
  eventsIngressQueue: FOO
  webpack:
    includeModules: 
      forceExclude:
        - aws-sdk
  dynamodb:
    start:
      migrate: true     
  
functions: 
  events: ${file(events-api.yml):events}
  events2: ${file(events-api.yml):events2}
  eventsAuthorizer: ${file(events-api.yml):eventsAuthorizer}
  eventsAuthorizer2: ${file(events-api.yml):eventsAuthorizer2}
           
resources:
  Resources:
    eventsIngressQueue:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.eventsIngressQueue}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES